(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{546:function(s,t,a){"use strict";a.r(t);var n=a(6),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"模块和包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块和包"}},[s._v("#")]),s._v(" 模块和包")]),s._v(" "),a("h3",{attrs:{id:"什么是模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是模块"}},[s._v("#")]),s._v(" 什么是模块？")]),s._v(" "),a("p",[s._v("为了编写可维护的代码，我们把很多函数分组，分别放到不同的文件里，这样，每个文件包含的代码就相对较少，很多编程语言都采用这种组织代码的方式。在 Python 中，一个.py 文件就可以称之为一个模块（Module）。")]),s._v(" "),a("h3",{attrs:{id:"模块的好处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块的好处"}},[s._v("#")]),s._v(" 模块的好处？")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("提高代码的可维护性")])]),s._v(" "),a("li",[a("p",[s._v("避免函数名和变量名的冲突")])])]),s._v(" "),a("h3",{attrs:{id:"模块的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块的分类"}},[s._v("#")]),s._v(" 模块的分类：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("内置标准模块")])]),s._v(" "),a("li",[a("p",[s._v("第三方开源模块")])]),s._v(" "),a("li",[a("p",[s._v("自定义模块")])])]),s._v(" "),a("h3",{attrs:{id:"模块导入调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块导入调用"}},[s._v("#")]),s._v(" 模块导入调用")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" module_name "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入  1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" module "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" xx  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 2")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xx "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" xx "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" rename "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入后重命令 3")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xx "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入一个模块下的所有方法，不建议使用")]),s._v("\n\nmodule_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"模块查找路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块查找路径"}},[s._v("#")]),s._v(" 模块查找路径")]),s._v(" "),a("p",[s._v("比如当前路径下能导入当前路径的模块，随便换个目录去导入之前路径的模块就有可能会报错。")]),s._v(" "),a("p",[s._v("这和导入模块的查找路径有关：")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sys\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     'E:\\\\LianXi\\\\Python\\\\venv',")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     'E:\\\\LianXi\\\\Python',")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     'C:\\\\Users\\\\Administrator\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python38-32\\\\python38.zip',")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     'C:\\\\Users\\\\Administrator\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python38-32\\\\DLLs',")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     'C:\\\\Users\\\\Administrator\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python38-32\\\\lib',")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     'C:\\\\Users\\\\Administrator\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python38-32',")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     'E:\\\\LianXi\\\\Python\\\\venv', 'E:\\\\LianXi\\\\Python\\\\venv\\\\lib\\\\site-packages'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("sys.path 显示的路径是 Python 解释器会按照上面列表顺序去依次到每个目录下去匹配你要导入的模块名，只要在一个目录下匹配到了该模块名，就立刻导入，不再继续往后找。 如果没有找到就会报错。")]),s._v(" "),a("p",[s._v("所以，我们自己创建的模块若想在任何地方都能调用，那就得确保你的模块文件至少在模块路径的查找列表中。")]),s._v(" "),a("ul",[a("li",[s._v("可以通过 "),a("code",[s._v("sys.path.append(base_path)")]),s._v(" 向 sys.path 列表添加路径。")])]),s._v(" "),a("h3",{attrs:{id:"第三方包模块的安装和使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三方包模块的安装和使用"}},[s._v("#")]),s._v(" 第三方包模块的安装和使用")]),s._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://pypi.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("网址"),a("OutboundLink")],1)])]),s._v(" "),a("li",[a("p",[s._v("通过命令行 pip 安装")])])]),s._v(" "),a("p",[a("code",[s._v("pip install moduleName")])]),s._v(" "),a("ul",[a("li",[s._v("pip 命令默认会连接在国外的 python 官方服务器下载，速度比较慢，你还可以使用国内的豆瓣源，数据会定期同步国外官网，速度快好多")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("`pip install -i http://pypi.douban.com/simple/ alex_sayhi --trusted-host pypi.douban.com #alex_sayhi是模块名`\n\n-i 后面跟的是豆瓣源地址\n\n—trusted-host 得加上，是通过网站 https 安全验证用的\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("通过国内的清华大学开源软件镜像站")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package\n\n例如 安装 Django\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple Django\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"os-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#os-模块"}},[s._v("#")]),s._v(" os 模块")]),s._v(" "),a("ul",[a("li",[s._v("os 模块提供了很多允许你的程序与操作系统直接交互的功能")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("得到当前工作目录，即当前Python脚本工作的目录路径: os.getcwd()\n返回指定目录下的所有文件和目录名:os.listdir()\n函数用来删除一个文件:os.remove()\n删除多个目录：os.removedirs（r“c：\\python”）\n检验给出的路径是否是一个文件：os.path.isfile()\n检验给出的路径是否是一个目录：os.path.isdir()\n判断是否是绝对路径：os.path.isabs()\n检验给出的路径是否真地存:os.path.exists()\n返回一个路径的目录名和文件名:os.path.split()     e.g os.path.split('/home/swaroop/byte/code/poem.txt') 结果：('/home/swaroop/byte/code', 'poem.txt')\n分离扩展名：os.path.splitext()       e.g  os.path.splitext('/usr/local/test.py')    结果：('/usr/local/test', '.py')\n获取路径名：os.path.dirname()\n获得绝对路径: os.path.abspath()\n获取文件名：os.path.basename()\n运行shell命令: os.system()\n读取操作系统环境变量HOME的值:os.getenv(\"HOME\")\n返回操作系统所有的环境变量： os.environ\n设置系统环境变量，仅程序运行时有效：os.environ.setdefault('HOME','/home/alex')\n给出当前平台使用的行终止符:os.linesep    Windows使用'\\r\\n'，Linux and MAC使用'\\n'\n指示你正在使用的平台：os.name       对于Windows，它是'nt'，而对于Linux/Unix用户，它是'posix'\n重命名：os.rename（old， new）\n创建多级目录：os.makedirs（r“c：\\python\\test”）\n创建单个目录：os.mkdir（“test”）\n获取文件属性：os.stat（file）\n修改文件权限与时间戳：os.chmod（file）\n获取文件大小：os.path.getsize（filename）\n结合目录名与文件名：os.path.join(dir,filename)\n改变工作目录到dirname: os.chdir(dirname)\n获取当前终端的大小: os.get_terminal_size()\n杀死进程: os.kill(10884,signal.SIGKILL)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("h2",{attrs:{id:"sys-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sys-模块"}},[s._v("#")]),s._v(" sys 模块")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("sys.argv           命令行参数List，第一个元素是程序本身路径\nsys.exit(n)        退出程序，正常退出时exit(0)\nsys.version        获取Python解释程序的版本信息\nsys.maxint         最大的Int值\nsys.path           返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值\nsys.platform       返回操作系统平台名称\nsys.stdout.write('please:')  #标准输出 , 引出进度条的例子， 注，在py3上不行，可以用print代替\nval = sys.stdin.readline()[:-1] #标准输入\nsys.getrecursionlimit() #获取最大递归层数\nsys.setrecursionlimit(1200) #设置最大递归层数\nsys.getdefaultencoding()  #获取解释器默认编码\nsys.getfilesystemencoding  #获取内存数据存到文件里的默认编码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"time-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#time-模块"}},[s._v("#")]),s._v(" time 模块")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("time.localtime([secs]) 将一个时间戳转换为当前时区的 struct_time。 如果 secs 没有提供，则以当前事件为准。")])]),s._v(" "),a("li",[a("p",[s._v("time.gmtime([secs]) 和 localtime()方法类似，gmtime()方法是将一个时间戳转换为 UTC 时区（0 时区）的 struct_time。")])]),s._v(" "),a("li",[a("p",[s._v("time.time() 返回当前的时间戳")])]),s._v(" "),a("li",[a("p",[s._v("time.mktime(t)：将一个 struct_time 转化为时间戳。")])]),s._v(" "),a("li",[a("p",[s._v("time.sleep(secs)：线程推迟指定的时间运行,单位为秒。")])]),s._v(" "),a("li",[a("p",[s._v("time.asctime([t])：把一个表示时间的元组或者 struct_time 表示为这种形式：’Sun Oct 1 12:04:38 2019’。如果没有参数，将会将 time.localtime()作为参数传入。")])]),s._v(" "),a("li",[a("p",[s._v("time.ctime([secs])：把一个时间戳（按秒计算的浮点数）转化为 time.asctime()的形式。如果参数未给或者为 None 的时候，将会默认 time.time()为参数。它的作用相当于 time.asctime(time.localtime(secs))。")])]),s._v(" "),a("li",[a("p",[s._v("time.strftime(format[, t])：把一个代表时间的元组或者 struct_time（如由 time.localtime()和 time.gmtime()返回）转化为格式化的时间字符串。如果 t 未指定，将传入 time.localtime()。")])]),s._v(" "),a("li",[a("p",[s._v("time.strptime(string[, format])：把一个格式化时间字符串转化为 struct_time。实际上它和 strftime()是逆操作。")]),s._v(" "),a("ul",[a("li",[s._v("举例：time.strptime(‘2017-10-3 17:54’,”%Y-%m-%d %H:%M”) #输出 time.struct_time(tm_year=2017, tm_mon=10, tm_mday=3, tm_hour=17, tm_min=54, tm_sec=0, tm_wday=1, tm_yday=276, tm_isdst=-1)")])])])]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# time.struct_time(tm_year=2020, tm_mon=8, tm_mday=29, tm_hour=20, tm_min=0, tm_sec=20, tm_wday=5, tm_yday=242")]),s._v("\n\ntime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("strftime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("“"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("Y"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("m"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("X”"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#输出’2017-10-01 12:14:23’")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"datetime-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datetime-模块"}},[s._v("#")]),s._v(" datetime 模块")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/113bd56f7b56",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考文章"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("相比于 time 模块， datetime 模块的接口更直观、容易调用")]),s._v(" "),a("p",[s._v("datetime 有下面几个类：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("datetime.data 表示日期的类 （常用属性有 year, month, day）")])]),s._v(" "),a("li",[a("p",[s._v("datetime.time 表示时间的类 （常用的属性有 hour, minute, second, microsecond）")])]),s._v(" "),a("li",[a("p",[s._v("datetime.datetime 表示日期的时间")])]),s._v(" "),a("li",[a("p",[s._v("datetime.timedelta 表示时间间隔， 就是两个时间点之间的长度")])]),s._v(" "),a("li",[a("p",[s._v("datetime.tzinfo 与时区有关的相关信息")])])]),s._v(" "),a("h2",{attrs:{id:"random-随机模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#random-随机模块"}},[s._v("#")]),s._v(" random 随机模块")]),s._v(" "),a("p",[s._v("程序中有很多地方需要用到随机字符，比如登录网站的随机验证码，通过 random 模块可以很容易生成随机字符串")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(">>> random.randrange(1,10) #返回1-10之间的一个随机数，不包括10\n>>> random.randint(1,10) #返回1-10之间的一个随机数，包括10\n>>> random.randrange(0, 100, 2) #随机选取0到100间的偶数\n>>> random.random()  #返回一个随机浮点数\n>>> random.choice('abce3#$@1') #返回一个给定数据集合中的随机字符\n'#'\n>>> random.sample('abcdefghij',3)  #从多个字符中选取特定数量的字符\n['a', 'd', 'b']\n#生成随机字符串\n>>> import string\n>>> ''.join(random.sample(string.ascii_lowercase + string.digits, 6))\n'4fvda1'\n#洗牌\n>>> a\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n>>> random.shuffle(a)\n>>> a\n[3, 0, 7, 2, 1, 6, 5, 8, 9, 4]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);